buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "1.2.1"
group = 'com.khanhpham'
archivesBaseName = 'AdvancementPlusMekanismAddon'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                mekanismaddon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                mekanismextension {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

              property 'forge.logging.console.level', 'debug'

            args '--mod', 'mekanismextension', '--all',
                    '--existing', file('src/main/resources').toString(),
                    '--existing', file('src/generated/resources').toString(),
                    '--output', file('src/generated/resources/')
            mods {
                mekanismextension {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }

    maven { url 'https://modmaven.dev/' }


    maven { url 'https://maven.blamejared.com' }

}
sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    minecraft "net.minecraftforge:forge:1.16.5-36.0.46"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${project.jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${project.jei_version}")

    runtimeOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-1.16.5:${project.ct_version}")


    implementation fg.deobf("mekanism:Mekanism:${project.mekanism_version}")// core
    implementation fg.deobf("mekanism:Mekanism:${project.mekanism_version}:additions")// Mekanism: Additions
    implementation fg.deobf("mekanism:Mekanism:${project.mekanism_version}:generators")// Mekanism: Generators
    implementation fg.deobf("mekanism:Mekanism:${project.mekanism_version}:tools")// Mekanism: Tools


}

jar {
    manifest {
        attributes([
            "Specification-Title": "mekanismextension",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
